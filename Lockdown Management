class State:

    def __init__(self, state_id, state_name, affected_count, days_of_lockdown):
        self.state_id = state_id
        self.state_name = state_name
        self.affected_count = affected_count
        self.days_of_lockdown = days_of_lockdown

    def increase_lockdown(self, number_of_weeks):
        if number_of_weeks >= 0:
            self.days_of_lockdown += (number_of_weeks * 7)
        return self.days_of_lockdown


class Country:
    def __init__(self, state_list, country_name="India"):
        self.country_name = country_name
        self.state_list = state_list

    def calculate_increase_in_lockdown_period(self, state_id, increase_number_of_lockdown_weeks):
        for i in self.state_list:
            if state_id == i.state_id:
                i.increase_lockdown(increase_number_of_lockdown_weeks)
                return i.state_name, i.days_of_lockdown

        return "No State Exists", -1


def main():
    states_list = []
    test_case = int(input("Number of state objects : "))

    for x in range(test_case):
        s_id = int(input("id "))
        s_name = input("name : ")
        affected = int(input("affected : "))
        days = int(input("days : "))

        s = State(s_id, s_name, affected, days)
        states_list.append(s)

    c = Country(states_list)
    select_state_id = int(input("Enter State ID : "))
    increased_weeks = int(input("Increased weeks : "))

    state_name, updated_days = c.calculate_increase_in_lockdown_period(select_state_id, increased_weeks)
    if updated_days == -1:
        print(state_name)
    else:
        print(state_name, updated_days)


if __name__ == "__main__":
    main()
